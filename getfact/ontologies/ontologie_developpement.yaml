# üíª Ontologie D√©veloppement - Extraction de faits pour le d√©veloppement logiciel
# Version: 1.0.0
# Domaine: D√©veloppement, DevOps, ing√©nierie logicielle

metadata:
  nom: "Ontologie D√©veloppement"
  domaine: "D√©veloppement et ing√©nierie logicielle"
  version: "1.0.0"
  description: "Ontologie sp√©cialis√©e pour l'extraction de faits li√©s au d√©veloppement, DevOps et cycle de vie logiciel"
  auteur: "LLMaaS Team - Cloud Temple"

# üë®‚Äçüíª Entit√©s d√©veloppement sp√©cifiques
entites:
  personnes:
    - type: "developpeur"
      description: "Professionnel du d√©veloppement logiciel"
      exemples: ["frontend", "backend", "fullstack", "mobile", "devops"]
    
    - type: "architecte"
      description: "Responsable de l'architecture technique"
      exemples: ["solution", "systeme", "cloud", "microservices"]
    
    - type: "product_owner"
      description: "Responsable produit et fonctionnalit√©s"
      exemples: ["PO", "chef_produit", "responsable_fonctionnel"]
    
    - type: "scrum_master"
      description: "Facilitateur m√©thodologique"
      exemples: ["SM", "coach_agile", "facilitateur"]

  composants_techniques:
    - type: "application"
      description: "Applications et services d√©velopp√©s"
      exemples: ["web_app", "mobile_app", "api", "microservice", "batch"]
    
    - type: "infrastructure"
      description: "Composants d'infrastructure"
      exemples: ["serveur", "base_donnees", "cache", "load_balancer", "cdn"]
    
    - type: "framework_technologie"
      description: "Technologies et frameworks utilis√©s"
      exemples: ["React", "Spring", "Docker", "Kubernetes", "PostgreSQL"]

  artefacts_code:
    - type: "repository"
      description: "D√©p√¥ts de code source"
      exemples: ["git_repo", "branch", "tag", "release"]
    
    - type: "module_composant"
      description: "Modules et composants logiciels"
      exemples: ["library", "package", "component", "service"]
    
    - type: "documentation"
      description: "Documentation technique"
      exemples: ["readme", "api_doc", "architecture_doc", "wiki"]

# üîó Relations d√©veloppement sp√©cifiques
relations:
  techniques:
    - type: "depend_de"
      description: "D√©pendance technique entre composants"
    
    - type: "utilise"
      description: "Utilisation d'une technologie/framework"
    
    - type: "deploye_sur"
      description: "Relation de d√©ploiement"
    
    - type: "interface_avec"
      description: "Interface entre syst√®mes"

  organisationnelles:
    - type: "developpe_par"
      description: "Relation d√©veloppeur-projet"
    
    - type: "maintenu_par"
      description: "Responsabilit√© de maintenance"
    
    - type: "appartient_a"
      description: "Appartenance √† une √©quipe/produit"

  processus:
    - type: "precede"
      description: "S√©quence dans le processus de d√©veloppement"
    
    - type: "teste_par"
      description: "Relation de test"
    
    - type: "integre_dans"
      description: "Int√©gration dans un ensemble plus large"

# üöÄ √âv√©nements d√©veloppement typiques
evenements:
  cycle_developpement:
    - "creation_feature_branch"
    - "commit_code"
    - "pull_request"
    - "code_review"
    - "merge_branch"
    - "tag_release"
  
  ci_cd:
    - "build_declenchee"
    - "tests_automatises"
    - "analyse_code"
    - "deploiement_staging"
    - "deploiement_production"
    - "rollback"
  
  gestion_projet:
    - "creation_ticket"
    - "assignation_tache"
    - "sprint_planning"
    - "daily_standup"
    - "sprint_review"
    - "retrospective"
  
  incidents:
    - "detection_bug"
    - "creation_incident"
    - "investigation"
    - "resolution"
    - "post_mortem"

# üìã Attributs d√©veloppement
attributs:
  techniques:
    - "langage_programmation"
    - "version_framework"
    - "architecture_pattern"
    - "niveau_complexite"
    - "performance_metrics"
  
  qualite:
    - "couverture_tests"
    - "score_qualite"
    - "dette_technique"
    - "vulnerabilites"
    - "code_smells"
  
  processus:
    - "methodologie"
    - "duree_sprint"
    - "velocity_equipe"
    - "lead_time"
    - "cycle_time"
  
  fonctionnels:
    - "feature_flag"
    - "user_story"
    - "acceptance_criteria"
    - "business_value"
    - "priority"

# üèóÔ∏è Contexte spatial d√©veloppement
contexte_spatial:
  environnements:
    - "developpement"
    - "integration"
    - "recette"
    - "preproduction"
    - "production"
  
  plateformes:
    - "cloud_aws"
    - "cloud_azure"
    - "cloud_gcp"
    - "on_premise"
    - "hybrid"
  
  regions:
    - "europe_west"
    - "us_east"
    - "asia_pacific"
    - "multi_region"

# ‚è∞ Contexte temporel d√©veloppement
contexte_temporel:
  cycles_agiles:
    - "sprint_2_semaines"
    - "sprint_3_semaines"
    - "release_mensuelle"
    - "release_trimestrielle"
  
  metriques_temps:
    - "time_to_market"
    - "lead_time"
    - "cycle_time"
    - "mttr"
    - "deployment_frequency"
  
  phases_projet:
    - "discovery"
    - "mvp"
    - "beta"
    - "ga"
    - "maintenance"

# üõ†Ô∏è Technologies et stacks
technologies:
  langages:
    frontend:
      - "JavaScript"
      - "TypeScript"
      - "HTML5"
      - "CSS3"
      - "Dart"
    
    backend:
      - "Java"
      - "Python"
      - "Node.js"
      - "C#"
      - "Go"
      - "Rust"
    
    mobile:
      - "Swift"
      - "Kotlin"
      - "Flutter"
      - "React Native"
  
  frameworks:
    frontend:
      - "React"
      - "Vue.js"
      - "Angular"
      - "Svelte"
    
    backend:
      - "Spring Boot"
      - "Django"
      - "FastAPI"
      - "Express.js"
      - ".NET Core"
  
  databases:
    - "PostgreSQL"
    - "MySQL"
    - "MongoDB"
    - "Redis"
    - "Elasticsearch"
  
  devops:
    - "Docker"
    - "Kubernetes"
    - "Jenkins"
    - "GitLab CI"
    - "Terraform"
    - "Ansible"

# üìä M√©triques et KPI d√©veloppement
metriques:
  productivite:
    - "velocity_sprint"
    - "throughput"
    - "lines_of_code"
    - "function_points"
  
  qualite:
    - "test_coverage"
    - "bug_rate"
    - "code_quality_score"
    - "security_score"
    - "performance_score"
  
  delivery:
    - "deployment_frequency"
    - "lead_time_changes"
    - "mttr"
    - "change_failure_rate"
  
  business:
    - "feature_adoption"
    - "user_satisfaction"
    - "roi_features"
    - "time_to_value"

# üéØ Instructions sp√©cifiques d'extraction
instructions_extraction:
  priorites:
    - "Identifier les technologies et versions pr√©cises"
    - "Extraire les relations de d√©pendance technique"
    - "Caract√©riser les processus et m√©thodologies"
    - "Suivre les m√©triques de performance et qualit√©"
    - "Identifier les patterns architecturaux"
  
  attention_particuliere:
    - "Versions et compatibilit√©s des technologies"
    - "D√©pendances critiques et points de d√©faillance"
    - "M√©triques de performance et seuils"
    - "Processus de s√©curit√© et vuln√©rabilit√©s"
    - "√âvolution de l'architecture dans le temps"

# üîÑ Processus d√©veloppement
processus:
  feature_development:
    etapes:
      - "user_story_creation"
      - "technical_design"
      - "development"
      - "unit_testing"
      - "code_review"
      - "integration_testing"
      - "deployment"
  
  bug_fixing:
    etapes:
      - "bug_triage"
      - "root_cause_analysis"
      - "fix_development"
      - "testing"
      - "regression_testing"
      - "deployment"
  
  release_management:
    etapes:
      - "release_planning"
      - "feature_freeze"
      - "testing_phase"
      - "release_candidate"
      - "production_deployment"
      - "monitoring"

exemples_utilisation:
  - "Analyse de documentation technique"
  - "Extraction d'informations des pull requests"
  - "Traitement des rapports de bug"
  - "Analyse des logs de d√©ploiement"
  - "Suivi des m√©triques de performance"
  - "Documentation d'architecture syst√®me"
  - "Analyse de d√©pendances et vuln√©rabilit√©s"
